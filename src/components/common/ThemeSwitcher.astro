---
import { Icon } from 'astro-icon/components';
---

<div class="inline-flex mr-5">
  <input
    class="absolute opacity-0"
    id="theme-switcher"
    data-theme-switcher
    type="checkbox"
    aria-label="data-theme-switcher-label"
  />
  <label
    id="data-theme-switcher-label"
    class="relative hidden h-4 cursor-pointer rounded-2xl bg-zinc-300 w-10"
    for="theme-switcher"
  >
    <span
      id="data-theme-switcher-span"
      class="absolute -top-1 left-0 flex h-6 w-6 items-center justify-center rounded-full bg-black transition-all duration-300 dark:bg-white"
    >
      <Icon name="tabler:sun-filled" class="text-white absolute z-10 opacity-100 dark:opacity-0" />
      <Icon name="tabler:moon-filled" class="text-black absolute z-10 opacity-0 dark:opacity-100" />
    </span>
  </label>
</div>

<script>
  const defaultTheme = 'system';
  const matchMedia = window.matchMedia('(prefers-color-scheme: dark)');
  const spanWithAttribute = document.getElementById('data-theme-switcher-span');
  const labelWithAttribute = document.getElementById('data-theme-switcher-label');
  matchMedia.addEventListener('change', () => toggleTheme(document.querySelectorAll('[data-theme-switcher]')));
  function toggleTheme(themeSwitch: NodeListOf<Element>) {
    const defaulTheme = defaultTheme === 'system' ? (matchMedia.matches ? 'dark' : 'light') : defaultTheme;
    const currentTheme = localStorage.getItem('theme') || defaulTheme;
    const isDarkTheme = currentTheme === 'dark';
    themeSwitch.forEach((sw: any) => (sw.checked = isDarkTheme));
    document.documentElement.classList.toggle('dark', isDarkTheme);
    if (spanWithAttribute && labelWithAttribute) {
      spanWithAttribute.classList.toggle('left-4', isDarkTheme);
      labelWithAttribute.classList.remove('hidden');
    }
  }
  const setDarkMode = () => {
    const themeSwitch = document.querySelectorAll('[data-theme-switcher]');
    toggleTheme(themeSwitch);
    themeSwitch.forEach((sw) => {
      sw.addEventListener('click', function () {
        const defaulTheme = defaultTheme === 'system' ? (matchMedia.matches ? 'dark' : 'light') : defaultTheme;
        const currentTheme = localStorage.getItem('theme') || defaulTheme;
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        localStorage.setItem('theme', newTheme);
        toggleTheme(themeSwitch);
      });
    });
  };

  // Runs on initial navigation
  setDarkMode();
  // Runs on view transitions navigation
  document.addEventListener('astro:after-swap', setDarkMode);
</script>

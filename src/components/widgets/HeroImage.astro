---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

export interface Props {
  image?: ImageMetadata;
}

const { image } = Astro.props;
---

<div class="lg:h-96 md:h-80 h-60 hero-image-container overflow-hidden rounded-md">
  {
    image && (
      <Image
        src={image}
        alt="Hero Image"
        class="h-full mx-auto rounded-md object-cover dark:opacity-70 hero-image"
        width={1200}
        widths={[640, 1200]}
        sizes={`(max-width:768px) 640px, 1200px`}
        loading="eager"
      />
    )
  }
</div>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener('DOMContentLoaded', () => {
    const imageContainer = document.querySelector('.hero-image-container');
    const image = document.querySelector('.hero-image');

    if (imageContainer && image) {
      // 创建滚动动画
      gsap.to(image, {
        scrollTrigger: {
          trigger: imageContainer,
          start: 'top bottom', // 图片进入视口底部时开始
          end: 'bottom top', // 图片离开视口顶部时结束
          scrub: 1, // 平滑跟随滚动，1表示1秒的延迟
          onUpdate: (self) => {
            // 获取滚动进度 (0 到 1)
            const progress = self.progress;

            // 放大变化 - 从1到1.6
            const scale = 1 + progress * 0.6;

            // 应用宽度变换
            gsap.set(image, {
              scale,
              transformOrigin: 'center center',
            });
          },
        },
      });

      // 额外的轻微视差效果
      gsap.to(imageContainer, {
        scrollTrigger: {
          trigger: imageContainer,
          start: 'top bottom',
          end: 'bottom top',
          scrub: 2,
        },
        y: -30, // 轻微的视差移动
        ease: 'none',
      });
    }
  });
</script>

<style>
  .hero-image-container {
    will-change: transform;
  }

  .hero-image {
    will-change: transform;
    transition: none;
  }
</style>
